#!/bin/bash

usage() { echo "Usage: $0 [-t <string>] [-o <string>] [-p] ir_files" 1>&2; exit 1; }

tmp_file=""
out_file="out.exe"
preserve=false
while getopts "h:t:o:p" arg; do
  case $arg in
    h)
      echo "usage"
      ;;
    t)
			tmp_file=${OPTARG}
      ;;
		o)
			out_file=${OPTARG}
      ;;
    p)
      preserve=true
			;;
  esac
done
shift $((OPTIND - 1))

INPUT=$@

CLANG="@CMAKE_C_COMPILER@"
CXXLANG="@CMAKE_CXX_COMPILER@"
SOURCE_DIR="@CMAKE_CURRENT_SOURCE_DIR@"
BUILD_DIR="@CMAKE_CURRENT_BINARY_DIR@"
MPI_LINK_FLAG="@MPI_LINK_FLAGS@"
LIBCXX_PATH="@CMAKE_LIBCXX_PATH@/lib"

cfsan_switch=$([ "@PERF_TAINT_WITH_CF_TAINTING@" == "TRUE" ] && echo "-dfsan-cfsan-enable" || echo "")
out_name_flag=$([ -n "${tmp_file}" ] && echo "-perf-taint-out-name=${tmp_file}" || echo "")

IR_FILES=()
OBJECT_FILES=()
for f in "${INPUT[@]}"; do
  ir_file_name="${f%.*}.dfsan.bc"
  object_file_name="${f%.*}.dfsan.o"
  @LLVM_OPT@ -load ${BUILD_DIR}/lib/libPerfTaintPass.so\
    -perf-taint\
    -perf-taint-func-database=${SOURCE_DIR}/share/mpi_abilist.txt\
    ${out_name_flag}\
    ${cfsan_switch}\
    -dfsan-abilist=${SOURCE_DIR}/share/dfsan_abilist.txt\
    < ${f}\
    > ${ir_file_name}
  echo "Taint instrumentation of ${f}, processed IR file ${ir_file_name}"
  IR_FILES+=(${ir_file_name})
  OBJECT_FILES+=(${object_file_name})
done

for ir_file in "${IR_FILES[@]}"; do
  object_file_name="${ir_file%.*}.o"
  ${CXXLANG} -c -fPIC -x ir ${ir_file} -o ${object_file_name}
done

# TODO: remove link against libc++abi
${CXXLANG} ${OBJECT_FILES[@]}\
  -stdlib=libc++\
  -fsanitize=dataflow\
  -fsanitize-blacklist=${SOURCE_DIR}/share/dfsan_abilist.txt\
  -L${LIBCXX_PATH}\
  -Wl,--start-group,-lc++abi\
  -L${BUILD_DIR}\
  -ldfsan_runtime\
  ${MPI_LINK_FLAG}\
  -o ${out_file}
echo "Generated ${out_file}"

if [ "$preserve" = false ] ; then
  for ir_file in "${IR_FILES[@]}"; do
    rm ${ir_file}
  done
  for obj_file in "${OBJECT_FILES[@]}"; do
    rm ${obj_file}
  done
fi

